version: "3"

services:
  backend:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}


  configurator:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    working_dir: /home/frappe/frappe-bench
    user: root
    entrypoint:
      - bash
      - -c
      - /home/frappe/scripts/configrator.sh
    command:
      - bash
      - /home/frappe/scripts/configrator.sh
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      REDIS_CACHE: ${REDIS_CACHE}
      REDIS_QUEUE: ${REDIS_QUEUE}
      SOCKETIO_PORT: ${SOCKETIO_PORT}
      FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - ./scripts:/home/frappe/scripts

  create-site:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    user: root
    entrypoint:
      - bash
      - -c
    command:
      - >
        apt update;
        apt install wait-for-it -y;
        apt install jq -y;
        wait-for-it -t 120 ${DB_HOST}:${DB_PORT};
        wait-for-it -t 120 ${REDIS_CACHE};
        wait-for-it -t 120 ${REDIS_QUEUE};
        export start=`date +%s`;
        until [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty"` ]] && \
          [[ -n `grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty"` ]];
        do
          echo "Waiting for sites/common_site_config.json to be created";
          sleep 5;
          if (( `date +%s`-start > 120 )); then
            echo "could not find sites/common_site_config.json with required keys";
            exit 1
          fi
        done;
        echo "sites/common_site_config.json found";
        runuser -u frappe -- bench new-site --mariadb-user-host-login-scope='%' --admin-password=${ADMIN_PASSWORD} --db-root-username=${MYSQL_ROOT_USER} --db-root-password=${MYSQL_ROOT_PASSWORD} --set-default ${FRAPPE_SITE} --force;
        runuser -u frappe -- bench use ${FRAPPE_SITE};
        runuser -u frappe -- bench install-app ${FRAPPE_APP_NAME};
        runuser -u frappe -- bench migrate;
        runuser -u frappe -- bench build;
        runuser -u frappe -- bench set-config -g developer_mode 0;
    environment:
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
        MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        FRAPPE_SITE: ${FRAPPE_SITE}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        REDIS_CACHE: ${REDIS_CACHE}
        REDIS_QUEUE: ${REDIS_QUEUE}
        FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}
        FRAPPE_APP_NAME: ${FRAPPE_APP_NAME}
    depends_on:
        mariadb:
          condition: service_healthy
        redis-cache:
          condition: service_started
        redis-queue:
          condition: service_started
        configurator:
          condition: service_completed_successfully


  mariadb:
    image: mariadb:10.6
    networks:
      - frappe_network
    healthcheck:
      test: mysqladmin ping -h localhost --password=${MYSQL_ROOT_PASSWORD}
      interval: 3s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
    volumes:
      - db-data:/var/lib/mysql

  frontend:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    user: root
    deploy:
      restart_policy:
        condition: on-failure
    entrypoint:
      - bash
      - -c
    command:
       - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE}
      SOCKETIO: websocket:${WEBSERVER_PORT}
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
      FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}
      WEBSERVER_PORT: ${WEBSERVER_PORT}
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "${WEBSERVER_PORT}:${WEBSERVER_PORT}"
    depends_on:
        create-site:
          condition: service_completed_successfully
        websocket:
          condition: service_started

  redis-queue:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - redis-queue-data:/data

  redis-cache:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure

  scheduler:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}

  websocket:
    image: ${FRAPPE_IMAGE_NAME}
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      FRAPPE_IMAGE_NAME: ${FRAPPE_IMAGE_NAME}

volumes:
  db-data:
  redis-queue-data:
  sites:
  logs:

networks:
  frappe_network:
    driver: bridge



